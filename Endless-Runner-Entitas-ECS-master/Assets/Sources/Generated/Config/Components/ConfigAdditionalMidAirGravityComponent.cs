//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity additionalMidAirGravityEntity { get { return GetGroup(ConfigMatcher.AdditionalMidAirGravity).GetSingleEntity(); } }
    public AdditionalMidAirGravityComponent additionalMidAirGravity { get { return additionalMidAirGravityEntity.additionalMidAirGravity; } }
    public bool hasAdditionalMidAirGravity { get { return additionalMidAirGravityEntity != null; } }

    public ConfigEntity SetAdditionalMidAirGravity(float newValue) {
        if (hasAdditionalMidAirGravity) {
            throw new Entitas.EntitasException("Could not set AdditionalMidAirGravity!\n" + this + " already has an entity with AdditionalMidAirGravityComponent!",
                "You should check if the context already has a additionalMidAirGravityEntity before setting it or use context.ReplaceAdditionalMidAirGravity().");
        }
        var entity = CreateEntity();
        entity.AddAdditionalMidAirGravity(newValue);
        return entity;
    }

    public void ReplaceAdditionalMidAirGravity(float newValue) {
        var entity = additionalMidAirGravityEntity;
        if (entity == null) {
            entity = SetAdditionalMidAirGravity(newValue);
        } else {
            entity.ReplaceAdditionalMidAirGravity(newValue);
        }
    }

    public void RemoveAdditionalMidAirGravity() {
        additionalMidAirGravityEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public AdditionalMidAirGravityComponent additionalMidAirGravity { get { return (AdditionalMidAirGravityComponent)GetComponent(ConfigComponentsLookup.AdditionalMidAirGravity); } }
    public bool hasAdditionalMidAirGravity { get { return HasComponent(ConfigComponentsLookup.AdditionalMidAirGravity); } }

    public void AddAdditionalMidAirGravity(float newValue) {
        var index = ConfigComponentsLookup.AdditionalMidAirGravity;
        var component = CreateComponent<AdditionalMidAirGravityComponent>(index);
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAdditionalMidAirGravity(float newValue) {
        var index = ConfigComponentsLookup.AdditionalMidAirGravity;
        var component = CreateComponent<AdditionalMidAirGravityComponent>(index);
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAdditionalMidAirGravity() {
        RemoveComponent(ConfigComponentsLookup.AdditionalMidAirGravity);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherAdditionalMidAirGravity;

    public static Entitas.IMatcher<ConfigEntity> AdditionalMidAirGravity {
        get {
            if (_matcherAdditionalMidAirGravity == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.AdditionalMidAirGravity);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherAdditionalMidAirGravity = matcher;
            }

            return _matcherAdditionalMidAirGravity;
        }
    }
}
