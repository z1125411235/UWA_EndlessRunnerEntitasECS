//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity jumpMaxVelocityEntity { get { return GetGroup(ConfigMatcher.JumpMaxVelocity).GetSingleEntity(); } }
    public JumpMaxVelocityComponent jumpMaxVelocity { get { return jumpMaxVelocityEntity.jumpMaxVelocity; } }
    public bool hasJumpMaxVelocity { get { return jumpMaxVelocityEntity != null; } }

    public ConfigEntity SetJumpMaxVelocity(UnityEngine.Vector2 newValue) {
        if (hasJumpMaxVelocity) {
            throw new Entitas.EntitasException("Could not set JumpMaxVelocity!\n" + this + " already has an entity with JumpMaxVelocityComponent!",
                "You should check if the context already has a jumpMaxVelocityEntity before setting it or use context.ReplaceJumpMaxVelocity().");
        }
        var entity = CreateEntity();
        entity.AddJumpMaxVelocity(newValue);
        return entity;
    }

    public void ReplaceJumpMaxVelocity(UnityEngine.Vector2 newValue) {
        var entity = jumpMaxVelocityEntity;
        if (entity == null) {
            entity = SetJumpMaxVelocity(newValue);
        } else {
            entity.ReplaceJumpMaxVelocity(newValue);
        }
    }

    public void RemoveJumpMaxVelocity() {
        jumpMaxVelocityEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public JumpMaxVelocityComponent jumpMaxVelocity { get { return (JumpMaxVelocityComponent)GetComponent(ConfigComponentsLookup.JumpMaxVelocity); } }
    public bool hasJumpMaxVelocity { get { return HasComponent(ConfigComponentsLookup.JumpMaxVelocity); } }

    public void AddJumpMaxVelocity(UnityEngine.Vector2 newValue) {
        var index = ConfigComponentsLookup.JumpMaxVelocity;
        var component = CreateComponent<JumpMaxVelocityComponent>(index);
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceJumpMaxVelocity(UnityEngine.Vector2 newValue) {
        var index = ConfigComponentsLookup.JumpMaxVelocity;
        var component = CreateComponent<JumpMaxVelocityComponent>(index);
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveJumpMaxVelocity() {
        RemoveComponent(ConfigComponentsLookup.JumpMaxVelocity);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherJumpMaxVelocity;

    public static Entitas.IMatcher<ConfigEntity> JumpMaxVelocity {
        get {
            if (_matcherJumpMaxVelocity == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.JumpMaxVelocity);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherJumpMaxVelocity = matcher;
            }

            return _matcherJumpMaxVelocity;
        }
    }
}
