//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity jumpImpulseEntity { get { return GetGroup(ConfigMatcher.JumpImpulse).GetSingleEntity(); } }
    public JumpImpulseComponent jumpImpulse { get { return jumpImpulseEntity.jumpImpulse; } }
    public bool hasJumpImpulse { get { return jumpImpulseEntity != null; } }

    public ConfigEntity SetJumpImpulse(UnityEngine.Vector2 newValue) {
        if (hasJumpImpulse) {
            throw new Entitas.EntitasException("Could not set JumpImpulse!\n" + this + " already has an entity with JumpImpulseComponent!",
                "You should check if the context already has a jumpImpulseEntity before setting it or use context.ReplaceJumpImpulse().");
        }
        var entity = CreateEntity();
        entity.AddJumpImpulse(newValue);
        return entity;
    }

    public void ReplaceJumpImpulse(UnityEngine.Vector2 newValue) {
        var entity = jumpImpulseEntity;
        if (entity == null) {
            entity = SetJumpImpulse(newValue);
        } else {
            entity.ReplaceJumpImpulse(newValue);
        }
    }

    public void RemoveJumpImpulse() {
        jumpImpulseEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public JumpImpulseComponent jumpImpulse { get { return (JumpImpulseComponent)GetComponent(ConfigComponentsLookup.JumpImpulse); } }
    public bool hasJumpImpulse { get { return HasComponent(ConfigComponentsLookup.JumpImpulse); } }

    public void AddJumpImpulse(UnityEngine.Vector2 newValue) {
        var index = ConfigComponentsLookup.JumpImpulse;
        var component = CreateComponent<JumpImpulseComponent>(index);
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceJumpImpulse(UnityEngine.Vector2 newValue) {
        var index = ConfigComponentsLookup.JumpImpulse;
        var component = CreateComponent<JumpImpulseComponent>(index);
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveJumpImpulse() {
        RemoveComponent(ConfigComponentsLookup.JumpImpulse);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherJumpImpulse;

    public static Entitas.IMatcher<ConfigEntity> JumpImpulse {
        get {
            if (_matcherJumpImpulse == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.JumpImpulse);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherJumpImpulse = matcher;
            }

            return _matcherJumpImpulse;
        }
    }
}
