//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity velocityIncreaseSpeedEntity { get { return GetGroup(ConfigMatcher.VelocityIncreaseSpeed).GetSingleEntity(); } }
    public VelocityIncreaseSpeedComponent velocityIncreaseSpeed { get { return velocityIncreaseSpeedEntity.velocityIncreaseSpeed; } }
    public bool hasVelocityIncreaseSpeed { get { return velocityIncreaseSpeedEntity != null; } }

    public ConfigEntity SetVelocityIncreaseSpeed(float newValue) {
        if (hasVelocityIncreaseSpeed) {
            throw new Entitas.EntitasException("Could not set VelocityIncreaseSpeed!\n" + this + " already has an entity with VelocityIncreaseSpeedComponent!",
                "You should check if the context already has a velocityIncreaseSpeedEntity before setting it or use context.ReplaceVelocityIncreaseSpeed().");
        }
        var entity = CreateEntity();
        entity.AddVelocityIncreaseSpeed(newValue);
        return entity;
    }

    public void ReplaceVelocityIncreaseSpeed(float newValue) {
        var entity = velocityIncreaseSpeedEntity;
        if (entity == null) {
            entity = SetVelocityIncreaseSpeed(newValue);
        } else {
            entity.ReplaceVelocityIncreaseSpeed(newValue);
        }
    }

    public void RemoveVelocityIncreaseSpeed() {
        velocityIncreaseSpeedEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public VelocityIncreaseSpeedComponent velocityIncreaseSpeed { get { return (VelocityIncreaseSpeedComponent)GetComponent(ConfigComponentsLookup.VelocityIncreaseSpeed); } }
    public bool hasVelocityIncreaseSpeed { get { return HasComponent(ConfigComponentsLookup.VelocityIncreaseSpeed); } }

    public void AddVelocityIncreaseSpeed(float newValue) {
        var index = ConfigComponentsLookup.VelocityIncreaseSpeed;
        var component = CreateComponent<VelocityIncreaseSpeedComponent>(index);
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceVelocityIncreaseSpeed(float newValue) {
        var index = ConfigComponentsLookup.VelocityIncreaseSpeed;
        var component = CreateComponent<VelocityIncreaseSpeedComponent>(index);
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveVelocityIncreaseSpeed() {
        RemoveComponent(ConfigComponentsLookup.VelocityIncreaseSpeed);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherVelocityIncreaseSpeed;

    public static Entitas.IMatcher<ConfigEntity> VelocityIncreaseSpeed {
        get {
            if (_matcherVelocityIncreaseSpeed == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.VelocityIncreaseSpeed);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherVelocityIncreaseSpeed = matcher;
            }

            return _matcherVelocityIncreaseSpeed;
        }
    }
}
