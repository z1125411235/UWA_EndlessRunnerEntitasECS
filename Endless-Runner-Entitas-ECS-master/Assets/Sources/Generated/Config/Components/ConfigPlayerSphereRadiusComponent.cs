//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity playerSphereRadiusEntity { get { return GetGroup(ConfigMatcher.PlayerSphereRadius).GetSingleEntity(); } }
    public PlayerSphereRadiusComponent playerSphereRadius { get { return playerSphereRadiusEntity.playerSphereRadius; } }
    public bool hasPlayerSphereRadius { get { return playerSphereRadiusEntity != null; } }

    public ConfigEntity SetPlayerSphereRadius(float newValue) {
        if (hasPlayerSphereRadius) {
            throw new Entitas.EntitasException("Could not set PlayerSphereRadius!\n" + this + " already has an entity with PlayerSphereRadiusComponent!",
                "You should check if the context already has a playerSphereRadiusEntity before setting it or use context.ReplacePlayerSphereRadius().");
        }
        var entity = CreateEntity();
        entity.AddPlayerSphereRadius(newValue);
        return entity;
    }

    public void ReplacePlayerSphereRadius(float newValue) {
        var entity = playerSphereRadiusEntity;
        if (entity == null) {
            entity = SetPlayerSphereRadius(newValue);
        } else {
            entity.ReplacePlayerSphereRadius(newValue);
        }
    }

    public void RemovePlayerSphereRadius() {
        playerSphereRadiusEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public PlayerSphereRadiusComponent playerSphereRadius { get { return (PlayerSphereRadiusComponent)GetComponent(ConfigComponentsLookup.PlayerSphereRadius); } }
    public bool hasPlayerSphereRadius { get { return HasComponent(ConfigComponentsLookup.PlayerSphereRadius); } }

    public void AddPlayerSphereRadius(float newValue) {
        var index = ConfigComponentsLookup.PlayerSphereRadius;
        var component = CreateComponent<PlayerSphereRadiusComponent>(index);
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePlayerSphereRadius(float newValue) {
        var index = ConfigComponentsLookup.PlayerSphereRadius;
        var component = CreateComponent<PlayerSphereRadiusComponent>(index);
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerSphereRadius() {
        RemoveComponent(ConfigComponentsLookup.PlayerSphereRadius);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherPlayerSphereRadius;

    public static Entitas.IMatcher<ConfigEntity> PlayerSphereRadius {
        get {
            if (_matcherPlayerSphereRadius == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.PlayerSphereRadius);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherPlayerSphereRadius = matcher;
            }

            return _matcherPlayerSphereRadius;
        }
    }
}
