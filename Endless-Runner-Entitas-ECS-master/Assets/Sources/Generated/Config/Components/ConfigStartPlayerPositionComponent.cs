//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity startPlayerPositionEntity { get { return GetGroup(ConfigMatcher.StartPlayerPosition).GetSingleEntity(); } }
    public StartPlayerPositionComponent startPlayerPosition { get { return startPlayerPositionEntity.startPlayerPosition; } }
    public bool hasStartPlayerPosition { get { return startPlayerPositionEntity != null; } }

    public ConfigEntity SetStartPlayerPosition(UnityEngine.Vector2 newValue) {
        if (hasStartPlayerPosition) {
            throw new Entitas.EntitasException("Could not set StartPlayerPosition!\n" + this + " already has an entity with StartPlayerPositionComponent!",
                "You should check if the context already has a startPlayerPositionEntity before setting it or use context.ReplaceStartPlayerPosition().");
        }
        var entity = CreateEntity();
        entity.AddStartPlayerPosition(newValue);
        return entity;
    }

    public void ReplaceStartPlayerPosition(UnityEngine.Vector2 newValue) {
        var entity = startPlayerPositionEntity;
        if (entity == null) {
            entity = SetStartPlayerPosition(newValue);
        } else {
            entity.ReplaceStartPlayerPosition(newValue);
        }
    }

    public void RemoveStartPlayerPosition() {
        startPlayerPositionEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public StartPlayerPositionComponent startPlayerPosition { get { return (StartPlayerPositionComponent)GetComponent(ConfigComponentsLookup.StartPlayerPosition); } }
    public bool hasStartPlayerPosition { get { return HasComponent(ConfigComponentsLookup.StartPlayerPosition); } }

    public void AddStartPlayerPosition(UnityEngine.Vector2 newValue) {
        var index = ConfigComponentsLookup.StartPlayerPosition;
        var component = CreateComponent<StartPlayerPositionComponent>(index);
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceStartPlayerPosition(UnityEngine.Vector2 newValue) {
        var index = ConfigComponentsLookup.StartPlayerPosition;
        var component = CreateComponent<StartPlayerPositionComponent>(index);
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveStartPlayerPosition() {
        RemoveComponent(ConfigComponentsLookup.StartPlayerPosition);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherStartPlayerPosition;

    public static Entitas.IMatcher<ConfigEntity> StartPlayerPosition {
        get {
            if (_matcherStartPlayerPosition == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.StartPlayerPosition);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherStartPlayerPosition = matcher;
            }

            return _matcherStartPlayerPosition;
        }
    }
}
