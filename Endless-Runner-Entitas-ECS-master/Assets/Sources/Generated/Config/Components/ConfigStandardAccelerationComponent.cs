//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity standardAccelerationEntity { get { return GetGroup(ConfigMatcher.StandardAcceleration).GetSingleEntity(); } }
    public StandardAccelerationComponent standardAcceleration { get { return standardAccelerationEntity.standardAcceleration; } }
    public bool hasStandardAcceleration { get { return standardAccelerationEntity != null; } }

    public ConfigEntity SetStandardAcceleration(UnityEngine.Vector2 newValue) {
        if (hasStandardAcceleration) {
            throw new Entitas.EntitasException("Could not set StandardAcceleration!\n" + this + " already has an entity with StandardAccelerationComponent!",
                "You should check if the context already has a standardAccelerationEntity before setting it or use context.ReplaceStandardAcceleration().");
        }
        var entity = CreateEntity();
        entity.AddStandardAcceleration(newValue);
        return entity;
    }

    public void ReplaceStandardAcceleration(UnityEngine.Vector2 newValue) {
        var entity = standardAccelerationEntity;
        if (entity == null) {
            entity = SetStandardAcceleration(newValue);
        } else {
            entity.ReplaceStandardAcceleration(newValue);
        }
    }

    public void RemoveStandardAcceleration() {
        standardAccelerationEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public StandardAccelerationComponent standardAcceleration { get { return (StandardAccelerationComponent)GetComponent(ConfigComponentsLookup.StandardAcceleration); } }
    public bool hasStandardAcceleration { get { return HasComponent(ConfigComponentsLookup.StandardAcceleration); } }

    public void AddStandardAcceleration(UnityEngine.Vector2 newValue) {
        var index = ConfigComponentsLookup.StandardAcceleration;
        var component = CreateComponent<StandardAccelerationComponent>(index);
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceStandardAcceleration(UnityEngine.Vector2 newValue) {
        var index = ConfigComponentsLookup.StandardAcceleration;
        var component = CreateComponent<StandardAccelerationComponent>(index);
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveStandardAcceleration() {
        RemoveComponent(ConfigComponentsLookup.StandardAcceleration);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherStandardAcceleration;

    public static Entitas.IMatcher<ConfigEntity> StandardAcceleration {
        get {
            if (_matcherStandardAcceleration == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.StandardAcceleration);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherStandardAcceleration = matcher;
            }

            return _matcherStandardAcceleration;
        }
    }
}
