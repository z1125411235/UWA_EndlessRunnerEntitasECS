//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity chunkCreationDistanceEntity { get { return GetGroup(ConfigMatcher.ChunkCreationDistance).GetSingleEntity(); } }
    public ChunkCreationDistanceComponent chunkCreationDistance { get { return chunkCreationDistanceEntity.chunkCreationDistance; } }
    public bool hasChunkCreationDistance { get { return chunkCreationDistanceEntity != null; } }

    public ConfigEntity SetChunkCreationDistance(float newValue) {
        if (hasChunkCreationDistance) {
            throw new Entitas.EntitasException("Could not set ChunkCreationDistance!\n" + this + " already has an entity with ChunkCreationDistanceComponent!",
                "You should check if the context already has a chunkCreationDistanceEntity before setting it or use context.ReplaceChunkCreationDistance().");
        }
        var entity = CreateEntity();
        entity.AddChunkCreationDistance(newValue);
        return entity;
    }

    public void ReplaceChunkCreationDistance(float newValue) {
        var entity = chunkCreationDistanceEntity;
        if (entity == null) {
            entity = SetChunkCreationDistance(newValue);
        } else {
            entity.ReplaceChunkCreationDistance(newValue);
        }
    }

    public void RemoveChunkCreationDistance() {
        chunkCreationDistanceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public ChunkCreationDistanceComponent chunkCreationDistance { get { return (ChunkCreationDistanceComponent)GetComponent(ConfigComponentsLookup.ChunkCreationDistance); } }
    public bool hasChunkCreationDistance { get { return HasComponent(ConfigComponentsLookup.ChunkCreationDistance); } }

    public void AddChunkCreationDistance(float newValue) {
        var index = ConfigComponentsLookup.ChunkCreationDistance;
        var component = CreateComponent<ChunkCreationDistanceComponent>(index);
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceChunkCreationDistance(float newValue) {
        var index = ConfigComponentsLookup.ChunkCreationDistance;
        var component = CreateComponent<ChunkCreationDistanceComponent>(index);
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveChunkCreationDistance() {
        RemoveComponent(ConfigComponentsLookup.ChunkCreationDistance);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherChunkCreationDistance;

    public static Entitas.IMatcher<ConfigEntity> ChunkCreationDistance {
        get {
            if (_matcherChunkCreationDistance == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.ChunkCreationDistance);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherChunkCreationDistance = matcher;
            }

            return _matcherChunkCreationDistance;
        }
    }
}
