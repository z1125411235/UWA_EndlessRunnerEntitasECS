//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ChildOfComponent childOf { get { return (ChildOfComponent)GetComponent(GameComponentsLookup.ChildOf); } }
    public bool hasChildOf { get { return HasComponent(GameComponentsLookup.ChildOf); } }

    public void AddChildOf(int newValue) {
        var index = GameComponentsLookup.ChildOf;
        var component = CreateComponent<ChildOfComponent>(index);
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceChildOf(int newValue) {
        var index = GameComponentsLookup.ChildOf;
        var component = CreateComponent<ChildOfComponent>(index);
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveChildOf() {
        RemoveComponent(GameComponentsLookup.ChildOf);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherChildOf;

    public static Entitas.IMatcher<GameEntity> ChildOf {
        get {
            if (_matcherChildOf == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ChildOf);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherChildOf = matcher;
            }

            return _matcherChildOf;
        }
    }
}
