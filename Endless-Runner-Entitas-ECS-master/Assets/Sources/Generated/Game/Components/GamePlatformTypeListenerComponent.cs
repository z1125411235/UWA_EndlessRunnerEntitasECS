//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PlatformTypeListenerComponent platformTypeListener { get { return (PlatformTypeListenerComponent)GetComponent(GameComponentsLookup.PlatformTypeListener); } }
    public bool hasPlatformTypeListener { get { return HasComponent(GameComponentsLookup.PlatformTypeListener); } }

    public void AddPlatformTypeListener(System.Collections.Generic.List<IPlatformTypeListener> newValue) {
        var index = GameComponentsLookup.PlatformTypeListener;
        var component = CreateComponent<PlatformTypeListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePlatformTypeListener(System.Collections.Generic.List<IPlatformTypeListener> newValue) {
        var index = GameComponentsLookup.PlatformTypeListener;
        var component = CreateComponent<PlatformTypeListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePlatformTypeListener() {
        RemoveComponent(GameComponentsLookup.PlatformTypeListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlatformTypeListener;

    public static Entitas.IMatcher<GameEntity> PlatformTypeListener {
        get {
            if (_matcherPlatformTypeListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlatformTypeListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlatformTypeListener = matcher;
            }

            return _matcherPlatformTypeListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddPlatformTypeListener(IPlatformTypeListener value) {
        var listeners = hasPlatformTypeListener
            ? platformTypeListener.value
            : new System.Collections.Generic.List<IPlatformTypeListener>();
        listeners.Add(value);
        ReplacePlatformTypeListener(listeners);
    }

    public void RemovePlatformTypeListener(IPlatformTypeListener value, bool removeComponentWhenEmpty = true) {
        var listeners = platformTypeListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemovePlatformTypeListener();
        } else {
            ReplacePlatformTypeListener(listeners);
        }
    }
}
