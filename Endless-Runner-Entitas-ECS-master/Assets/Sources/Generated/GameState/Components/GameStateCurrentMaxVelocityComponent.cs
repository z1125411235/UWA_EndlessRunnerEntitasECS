//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameStateContext {

    public GameStateEntity currentMaxVelocityEntity { get { return GetGroup(GameStateMatcher.CurrentMaxVelocity).GetSingleEntity(); } }
    public CurrentMaxVelocityComponent currentMaxVelocity { get { return currentMaxVelocityEntity.currentMaxVelocity; } }
    public bool hasCurrentMaxVelocity { get { return currentMaxVelocityEntity != null; } }

    public GameStateEntity SetCurrentMaxVelocity(UnityEngine.Vector2 newValue) {
        if (hasCurrentMaxVelocity) {
            throw new Entitas.EntitasException("Could not set CurrentMaxVelocity!\n" + this + " already has an entity with CurrentMaxVelocityComponent!",
                "You should check if the context already has a currentMaxVelocityEntity before setting it or use context.ReplaceCurrentMaxVelocity().");
        }
        var entity = CreateEntity();
        entity.AddCurrentMaxVelocity(newValue);
        return entity;
    }

    public void ReplaceCurrentMaxVelocity(UnityEngine.Vector2 newValue) {
        var entity = currentMaxVelocityEntity;
        if (entity == null) {
            entity = SetCurrentMaxVelocity(newValue);
        } else {
            entity.ReplaceCurrentMaxVelocity(newValue);
        }
    }

    public void RemoveCurrentMaxVelocity() {
        currentMaxVelocityEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameStateEntity {

    public CurrentMaxVelocityComponent currentMaxVelocity { get { return (CurrentMaxVelocityComponent)GetComponent(GameStateComponentsLookup.CurrentMaxVelocity); } }
    public bool hasCurrentMaxVelocity { get { return HasComponent(GameStateComponentsLookup.CurrentMaxVelocity); } }

    public void AddCurrentMaxVelocity(UnityEngine.Vector2 newValue) {
        var index = GameStateComponentsLookup.CurrentMaxVelocity;
        var component = CreateComponent<CurrentMaxVelocityComponent>(index);
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCurrentMaxVelocity(UnityEngine.Vector2 newValue) {
        var index = GameStateComponentsLookup.CurrentMaxVelocity;
        var component = CreateComponent<CurrentMaxVelocityComponent>(index);
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCurrentMaxVelocity() {
        RemoveComponent(GameStateComponentsLookup.CurrentMaxVelocity);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameStateMatcher {

    static Entitas.IMatcher<GameStateEntity> _matcherCurrentMaxVelocity;

    public static Entitas.IMatcher<GameStateEntity> CurrentMaxVelocity {
        get {
            if (_matcherCurrentMaxVelocity == null) {
                var matcher = (Entitas.Matcher<GameStateEntity>)Entitas.Matcher<GameStateEntity>.AllOf(GameStateComponentsLookup.CurrentMaxVelocity);
                matcher.componentNames = GameStateComponentsLookup.componentNames;
                _matcherCurrentMaxVelocity = matcher;
            }

            return _matcherCurrentMaxVelocity;
        }
    }
}
